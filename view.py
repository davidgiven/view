from commands import *
import acorn

load(0x8000, "view-b3.0.rom", "65c02")

acorn.bbc()
acorn.is_sideways_rom()

def inline_string_hook(target, addr):
    n = stringhiz(addr+3)
    b = get_u8_binary(n)
    if b == 0:
        return n+1
    return None

def decode_parser_table(addr):
    saddr = addr
    name = ""
    index = 0
    while True:
        b = get_u8_binary(addr)
        if b == 0:
            break
        if b >= 0x80:
            comment(saddr, f"'{name}' -> {index}, flag={b & 0x7f}")
            byte(saddr, len(name))

            name = ""
            saddr = addr + 1
            index += 1
        else:
            name += chr((b ^ ord('[')) & 0xdf)
        addr += 1

def labelword(addr, name):
    label(addr, name)
    expr_label(addr+0, f"{name}+0")
    expr_label(addr+1, f"{name}+1")

hook_subroutine(0xa7fa, "print_inline_string", inline_string_hook)

labelword(0x02, "current_line_ptr")
labelword(0x1f, "oshwm")
label(0x40, "xpos")
label(0x4e, "operating_mode")
labelword(0x7f, "input_buffer_ptr")
label(0x52, "is_tube_flag")
label(0x37, "current_screen_mode")
label(0x7b, "current_tab_key")
label(0x35, "screen_height")
label(0x36, "screen_width")
label(0x22, "top_margin")
label(0x23, "bottom_margin")
label(0x25, "footer_margin")
label(0x2f, "left_margin")
label(0x27, "line_spacing")
label(0x28, "footers_enabled")
label(0x29, "headers_enabled")
label(0x26, "page_length")
word(0x53, 6)
labelword(0x53, "markers_array")
labelword(0x17, "printer_driver_ptr")
expr(0x948c, make_lo("printer_driver_block"))
expr(0x948e, make_hi("printer_driver_block"))
word(0x8d)

expr_label(0x400, "printer_driver_block")
expr(0x8802, make_lo("printer_driver_block"))
expr(0x8807, make_hi("printer_driver_block"))
expr_label(0x500, "input_buffer")
expr(0x820b, make_lo("input_buffer"))
expr(0x820f, make_hi("input_buffer"))
label(0x75c, "filename")
expr(0x894d, make_lo("filename"))
expr(0x8952, make_hi("filename"))
label(0x7ec, "document_filename")

label(0x784, "printer_driver_name")
wordentry(0x94b1)
label(0x94b1, "default_printer_driver_ptr")
subroutine(0x94b3, "default_printer_driver")
entry(0x94b6)
entry(0x94b9)
entry(0x94bc)
entry(0x94bf)

expr_label(0x80b8, "word_command_str")

label(0x9bd0, "enter_printable_character")
label(0x9bac, "enter_nonprintable_character")
label(0xb14c, "non_function_key_table")

subroutine(0x9762, "parse_boolean_from_fmt_cmd")
subroutine(0x8445, "print_to_screen")
subroutine(0xb0e0, "create_default_ruler")
subroutine(0xafb0, "detect_tube")
subroutine(0xacef, "lookup_marker")
subroutine(0xaaf1, "get_line_length")
subroutine(0x823b, "esc_key")
subroutine(0x9d7b, "return_key")
subroutine(0x9e00, "delete_key")
subroutine(0x9e30, "tab_key")
subroutine(0xa03c ,"f0_format_block_key")
subroutine(0xa05e ,"f1_top_of_text_key")
subroutine(0xa09c ,"f2_bottom_of_text_key")
subroutine(0x9edd ,"f3_delete_to_eol_key")
subroutine(0x9e92 ,"f4_beginning_of_line_key")
subroutine(0x9e99 ,"f5_end_of_line_key")
subroutine(0x9dd8 ,"f6_insert_line_key")
subroutine(0x9e50 ,"f7_delete_line_key")
subroutine(0x9e20 ,"f8_insert_char_key")
subroutine(0x9e49 ,"f9_delete_char_key")
subroutine(0xa1b7 ,"f11_copy_key")
subroutine(0x9d54 ,"f12_left_key")
subroutine(0x9d4b ,"f13_right_key")
subroutine(0x9d74 ,"f14_down_key")
subroutine(0x9d5b ,"f15_up_key")
subroutine(0xa194 ,"sf0_move_block_key")
subroutine(0x9d3c ,"sf1_swap_case_key")
subroutine(0x9e86 ,"sf2_release_margins_key")
subroutine(0xa102 ,"sf3_delete_to_char_key")
subroutine(0x9e34 ,"sf4_highlight1_key")
subroutine(0x9e38 ,"sf5_highlight2_key")
subroutine(0xa024 ,"sf6_go_to_marker_key")
subroutine(0xa012 ,"sf7_set_marker_key")
subroutine(0x9ee8 ,"sf8_edit_command_key")
subroutine(0x9f62 ,"sf9_delete_command_key")
subroutine(0xa0db ,"sf11_copy_key")
subroutine(0x9f9d ,"sf12_left_key")
subroutine(0x9fe3 ,"sf13_right_key")
subroutine(0xa0a9 ,"sf14_down_key")
subroutine(0xa06b, "sf15_up_key")
subroutine(0xa177, "cf0_delete_block_key")
subroutine(0xa268, "cf1_next_match_key")
subroutine(0xa154, "cf2_format_mode_key")
subroutine(0xa165, "cf3_justify_mode_key")
subroutine(0xa16e, "cf4_insert_mode_key")
subroutine(0xa0f2, "cf5_default_ruler_key")
subroutine(0x9db1, "cf6_split_line_key")
subroutine(0x9ea1, "cf7_join_lines_key")
subroutine(0x9f3b, "cf8_mark_as_ruler_key")

subroutine(0x9755, "execute_formatting_command")
subroutine(0x9730, "lookup_formatting_command")
subroutine(0xa7a8, "draw_prompt_characters")
subroutine(0xa7cd, "cursor_on")
subroutine(0xa565, "set_normal_text_if_not_mode_7")
subroutine(0xa577, "set_inverted_text_if_not_mode_7")
subroutine(0xa58e, "set_text_colour")
subroutine(0xa67f, "home_cursor")
subroutine(0xa78b, "complete_CRTC_10_write")
subroutine(0xa786, "cursor_off")
subroutine(0xa799, "setup_CRTC_10_write")
subroutine(0xa7dc, "save_cursor_position")
subroutine(0xa7e6, "restore_cursor_position")
subroutine(0xa7ea, "set_cursor_position")
subroutine(0xa75a, "flush_and_read_char")
subroutine(0xa761, "read_char")
subroutine(0x9b36, "run_editor")
subroutine(0x8839, "parse_integer_from_command")
subroutine(0x850a, "quit_cmd")
subroutine(0x8797, "new_cmd")
subroutine(0x874e, "format_cmd")
subroutine(0x863f, "setup_cmd")
subroutine(0x8558, "read_cmd")
subroutine(0x84ae, "more_cmd")
subroutine(0x8427, "screen_cmd")
subroutine(0x842f, "sheets_cmd")
subroutine(0x8906, "save_cmd")
subroutine(0x869e, "count_cmd")
subroutine(0x8684, "field_cmd")
subroutine(0x87dd, "printer_cmd")
subroutine(0x8286, "search_cmd")
subroutine(0xb091, "clear_cmd")
subroutine(0x85f8, "microspace_cmd")
subroutine(0x879d, "fold_cmd")
subroutine(0x88e6, "name_cmd")
subroutine(0x85b6, "mode_cmd")
subroutine(0x84eb, "finish_cmd")
subroutine(0x8440, "print_cmd")
subroutine(0x82a1, "change_cmd")
subroutine(0x851d, "write_cmd")
subroutine(0x8468, "edit_cmd")
subroutine(0x831d, "replace_cmd")
subroutine(0x8877, "load_cmd")

subroutine(0x94d9, "ce_fmt_cmd")
subroutine(0x94f8, "rj_fmt_cmd")
subroutine(0x9571, "df_fmt_cmd")
subroutine(0x956b, "dh_fmt_cmd")
subroutine(0x966d, "dm_fmt_cmd")
subroutine(0x95ba, "em_fmt_cmd")
subroutine(0x9623, "pe_fmt_cmd")
subroutine(0x95f3, "tm_fmt_cmd")
subroutine(0x95fb, "bm_fmt_cmd")
subroutine(0x95dc, "pl_fmt_cmd")
subroutine(0x95e4, "ts_fmt_cmd")
subroutine(0x964f, "fo_fmt_cmd")
subroutine(0x9659, "he_fmt_cmd")
subroutine(0x9702, "ht_fmt_cmd")
subroutine(0x9603, "hm_fmt_cmd")
subroutine(0x960b, "fm_fmt_cmd")
subroutine(0x9613, "lm_fmt_cmd")
subroutine(0x961b, "ls_fmt_cmd")
subroutine(0x9634, "op_fmt_cmd")
subroutine(0x963c, "ep_fmt_cmd")
subroutine(0x94d0, "lj_fmt_cmd")
subroutine(0x9663, "pb_fmt_cmd")

subroutine(0x894c, "do_osfile_with_block")
subroutine(0x8e63, "error_if_cassette_filesystem")
subroutine(0x8e7d, "test_for_cassette_filesystem")
subroutine(0x81f6, "cli")
subroutine(0x94a3, "call_printer_driver")
subroutine(0xa892, "call_through_jumptable")
subroutine(0xace8, "beep")
subroutine(0xb09b, "enter_editor_mode")
subroutine(0x80f6, "enter_cli_mode")
subroutine(0xb328, "create_go_command")
subroutine(0xa76e, "acknowledge_escape")
subroutine(0xa847, "parse_command")

label(0x8241, "input_line_not_escaped")
label(0x8258, "input_line_not_oscli")
label(0xb205, "parser_table")
decode_parser_table(0xb205)

word(0x83df, 8)

wordentry(0xb151, 4)
expr_label(0xb151, "jumptable_ptrs")
wordentry(0xb159, 52)
expr_label(0xb159, "jumptable1")
wordentry(0xb1c1, 25)
expr_label(0xb1c1, "jumptable2")
wordentry(0xb1f3, 3)
expr_label(0xb1f3, "jumptable3")
wordentry(0xb2cf, 23)
label(0xb2cf, "jumptable4")
stringz(0xb39a)

label(0xb2a0, "commands_table")
for addr in range(0xb2a0, 0xb2ce, 2):
    string(addr, 2)

wordentry(0x80f1)
label(0x80f1, "brk_handler_ptr")
subroutine(0x8a2e, "brk_handler")

go()
